//dir=getDirectory("mouse");
//print(dir)
setBatchMode(true);
print("___________________________________________");

// For nucleus segmentation parameter
minSize=15; // minimum diameter
maxSize=28; // maximum diameter

// For cell zone determination
cell_extension_radius=3;

suffixe=".tif"; // change this setting if your image ends with .tiff

//spot_seeds_threshold=30000; //improved, automatic defined as below
background_threshold=10;	// if no pixel value higher than this threshold means background images, no objects, skip all computations.

dir = getArgument;
//dir=getDirectory("mouse");
//print(dir)
//dir = "/Users/hoatran/Documents/python_workspace/Spatial3DTissueJ/testing_images/filtered/";  // for testing purpose, you can disable line above, and use this
if (dir=="") 
	exit ("No argument!");

print("Working dir: "+dir+"\n");
main_dir=File.getParent(dir)+"/";
print("Main dir: "+main_dir+"\n");

seg_dir=main_dir+"seg/";
if(!File.exists(seg_dir)) 
      File.mkdir(seg_dir);

print("Creating segmentation folder: "+seg_dir+"\n");

files=getFileList(dir);

print("Nb of processing images: "+files.length+"\n");

for(f=0;f<files.length;f++)
{
     if(!File.isDirectory(dir+files[f])) {
				name=files[f];
				// NUC image ends with dapi.tif
				if(endsWith(name,"dapi"+suffixe)){
					//print("Get the right channel : "+name);
					short_name = substring(name,0,lastIndexOf(name,suffixe));  
					
					print("_______________________________________\n");
					print(short_name);
          start = getTime();
					print("Loading image: "+name);
					open(dir+name);
					h=getHeight();
					w=getWidth();
					//print(' t: '+title+"   h:   "+h+"w:   "+w);
					setOption("ScaleConversions", true);
					selectWindow(name);
					run("Enhance Contrast", "saturated=0.35");
					//if (bitDepth > 8) //{run("8-bit");}
					getStatistics(area, mean, min, max, std);
					print(getTitle+":   max:   "+max+"  min: "+min+"  mean: "+mean+"  area: "+area+"  std:"+std);
					if(max<background_threshold){
						print("******* Background image, low intensity, please verify your input image");
						run("Close All"); 
					} else{
			      selectWindow(name);
					  run("Grays");
					  //selectWindow(name);
					  run("Duplicate...", "title=["+ short_name +"_raw]");
					  print("Band pass filtering...");
					  selectWindow(name);
						run("32-bit");
			      run("Bandpass Filter...", "filter_large="+maxSize+" filter_small="+minSize+" suppress=None tolerance=5");
						run("Enhance Contrast", "saturated=0.35");
						run("16-bit");
						
						//saveAs("Tiff",dir+"FILTERED/"+"BP_"+name);
						//open(dir+"FILTERED/"+"BP_"+name);
						//selectWindow("BP_"+name);
						//rename("BP_dapi");
						selectWindow(name);
						print("Segmenting...");
						getStatistics(area, mean, min, max, std);
						print(getTitle+"  mean value: "+mean);
						sd=1000;
						spot_seeds_threshold=floor(mean)+sd;  // if you obtain too many objects, you can increase the sd value here. And in contrast, if you obtain small number of objects than you expected, you can decrease the sd value here
						print("_________________________________________");
						print("ATTENTION: automatic seeds threshold value is:  "+spot_seeds_threshold);
						run("3D Spot Segmentation", "seeds_threshold="+spot_seeds_threshold+" local_background=0 radius_0=2 radius_1=4 radius_2=6 weigth=0.50 radius_max=20 sd_value=1.90 local_threshold=[Gaussian fit] seg_spot=Block watershed volume_min=20 volume_max=1000000 seeds=Automatic spots="+short_name+" radius_for_seeds=2 output=[Label Image]"); 
						//run("NUCLEI SEGMENTATION", "dapi=C4-dapi.tif maximal=14 minimal=7 seed=20000");

						selectWindow("seg");
						run("3-3-2 RGB");
					 	saveAs("Tiff",seg_dir+short_name+"_SEG.tif");	
					 	
						run("3D Draw Rois", "raw="+short_name+"_raw seg="+short_name+"_SEG");
						saveAs("Tiff", seg_dir+short_name+"_seg_demo_only.tif");
						run("close"); 
						selectWindow(short_name+"_SEG.tif");
						run("CELL ZONE ESTIMATION", "nuclei="+short_name+"_SEG.tif radius_max=+"+cell_extension_radius+" save");
						run("Close All"); 
						print("Time of execution is: "+(getTime()-start)/1000+" seconds"); 

					}
					
           }
           
    }

}
print("Segmented nuc images results are saved into folder: "+seg_dir+"\n");
print("Hura, completed!!!");

//if(!File.exists(dir+"log")) File.mkdir(dir+"log");
//selectWindow("Log");
//saveAs("Text", dir+ "segment_log.txt");
setBatchMode(false);






